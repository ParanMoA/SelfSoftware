### 세션(Session)

**[1] 세션이란?**

서로 관련된 요청들을 하나로 묶은 것 → 쿠키를 이용

브라우저마다 개별 저장소(session 객체)를 서버에서 제공

→ 쿠키는 브라우저에 저장, 세션은 서버에서 제공

쿠키를 이용하여 같은 세션 ID를 가진 요청은 같은 세션임!

세션 종료는 수동 종료/ 자동 종료 있음.

**[2] 세션의 생성 과정**

브라우저가 요청을 보내면 서버는 무조건 세션 객체를 생성함 → 세션 객체마다 세션 ID가 있고 세션 ID가 담긴 쿠키를 만들어서 담아서 응답을 보냄 → 그 이후로는 브라우저가 요청을 할때 쿠키를 포함해서 요청함.

**[3] 세션 객체 얻기**

request를 통해 getSession()으로 세션 ID를 얻음.

**[4] 세션과 관련된 메서드**

getID(): 세션의 ID 반환 

getLastAccessedTime(): 세션 내에서 최근 요청을 받은 시간을 반환

isNew(): 새로 생성된 세션인지 반환

setMaxInactiveInterval(int interval): 지정된 시간(초)후에 세션을 종료

…

**[5] 세션의 종료**

1. 수동 종료 (초 단위)
    
    ```java
    HttpSession session = request.getSession();
    session.invalidate();
    session.setMaxInactiveInterval(30*60);
    ```
    
2. 자동 종료 (분 단위) - web.xml 
    
    ```java
    <session-config>
    	<session-timeout>30</session-timeout>
    </session-config>
    ```
    
    세션의 마지막 요청 ~ 현재 요청 시간 간격이 timeout 시간을 넘기면, timeout이 발생하고 새로운 세션 객체, 즉 ID가 부여됨.
    

**[6] 쿠키 vs 세션**

브라우저가 쿠키를 허용하지 않을 수 있기 때문에 첫 요청에는 url뒤 , 응답 헤더에 모두 JSESSIONID를 붙여서 보냄 !!

session true? flase?

→ 세션을 새로 생성할지 결정할때 지표.

세션이 시작되지 않아도 되는 jsp에서는 session=false로 지정해둠.

세션이 생성되고 난 이후에 재접속해도 session=false여도 전혀 상관 없음. 새로 생성할지 말지이기 때문에!